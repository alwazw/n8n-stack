version: '3.8'

volumes:
  db_storage:
  n8n_storage:
  redis_storage:
  grafana_data:
  nginx_certs:
  nginx_conf:
  traefik_certs:
  pgadmin_data:
  supabase_pgdata:
  supabase_storage:

networks:
  n8n-network:
    driver: bridge

x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    - N8N_SECURE_COOKIE=true
    - N8N_HOST=n8n-stack
    - N8N_PROTOCOL=https
    - NODE_TLS_REJECT_UNAUTHORIZED=0
    - N8N_TRUSTED_PROXIES=nginx
  links:
    - postgres
    - redis
    - grafana
  volumes:
    - n8n_storage:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
  networks:
    - n8n-network

services:

  #Postgres
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  #pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@n8n-stack.local}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-${POSTGRES_PASSWORD}}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - n8n-network

  #Redis
  redis:
    image: redis:6-alpine
    restart: always
    ports:      
      - "${REDIS_PORT:-6379}:6379"
    depends_on:
      - postgres
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env
    networks:
      - n8n-network

  #Adminer
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - n8n-network

  #Grafana
  grafana:
    image: grafana/grafana-oss:latest
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - n8n-network

  #Nginx
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - nginx_conf:/etc/nginx
    depends_on:
      - n8n
      - supabase-studio
    networks:
      - n8n-network

  #Traefik
  traefik:
    image: traefik:v2.10
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "8081:8080" # Dashboard
      - "81:80"     # HTTP
      - "444:443"   # HTTPS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - traefik_certs:/etc/traefik/certs
    networks:
      - n8n-network
    labels:
      - "traefik.enable=true"

  n8n:
    <<: *shared
    ports:
      - 5678:5678
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n-stack`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n
    networks:
      - n8n-network

  # Supabase Services
  supabase-db:
    image: supabase/postgres:15.1.0.117
    restart: always
    environment:
      - POSTGRES_USER=${SUPABASE_DB_USER:-${POSTGRES_USER}}
      - POSTGRES_PASSWORD=${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}
      - POSTGRES_DB=${SUPABASE_DB:-supabase}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - supabase_pgdata:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SUPABASE_DB_USER:-${POSTGRES_USER}} -d ${SUPABASE_DB:-supabase}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network
    ports:
      - "5432:5432"

  supabase-auth:
    image: supabase/gotrue:v2.64.1
    restart: always
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - API_EXTERNAL_URL=https://n8n-stack
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_HOST=supabase-db
      - GOTRUE_DB_PORT=5432
      - GOTRUE_DB_USER=${SUPABASE_DB_USER:-${POSTGRES_USER}}
      - GOTRUE_DB_PASSWORD=${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}
      - GOTRUE_DB_DATABASE_URL=postgres://${SUPABASE_DB_USER:-${POSTGRES_USER}}:${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}@supabase-db:5432/${SUPABASE_DB:-supabase}?sslmode=disable
      - GOTRUE_SITE_URL=https://n8n-stack
      - GOTRUE_JWT_SECRET=${SUPABASE_JWT_SECRET:-${ENCRYPTION_KEY}}
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_SMTP_ADMIN_EMAIL=${SUPABASE_ADMIN_EMAIL:-admin@n8n-stack.local}
      - GOTRUE_MAILER_AUTOCONFIRM=true
    networks:
      - n8n-network
    ports:
      - "9999:9999"

  supabase-rest:
    image: postgrest/postgrest:v10.1.2
    restart: always
    depends_on:
      - supabase-db
      - supabase-auth
    environment:
      - PGRST_DB_URI=postgres://${SUPABASE_DB_USER:-${POSTGRES_USER}}:${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}@supabase-db:5432/${SUPABASE_DB:-supabase}
      - PGRST_DB_SCHEMA=public,storage
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${SUPABASE_JWT_SECRET:-${ENCRYPTION_KEY}}
      - PGRST_DB_USE_LEGACY_GUCS=false
    networks:
      - n8n-network
    ports:
      - "3001:3000"

  supabase-storage:
    image: supabase/storage-api:v0.40.4
    restart: always
    depends_on:
      - supabase-db
      - supabase-rest
    environment:
      - ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      - SERVICE_KEY=${SUPABASE_SERVICE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU}
      - POSTGREST_URL=http://supabase-rest:3000
      - PGRST_JWT_SECRET=${SUPABASE_JWT_SECRET:-${ENCRYPTION_KEY}}
      - DATABASE_URL=postgres://${SUPABASE_DB_USER:-${POSTGRES_USER}}:${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}@supabase-db:5432/${SUPABASE_DB:-supabase}
      - TENANT_ID=stub
      - REGION=stub
      - GLOBAL_S3_BUCKET=stub
      - ENABLE_IMAGE_TRANSFORMATION=true
      - FILE_SIZE_LIMIT=52428800
      - FILE_STORAGE_BACKEND=file
      - FILE_STORAGE_UPLOAD_TIMEOUT=30000
      - STORAGE_BACKEND=file
      - FILE_STORAGE_BACKEND_PATH=/var/lib/storage
    volumes:
      - supabase_storage:/var/lib/storage
    networks:
      - n8n-network
    ports:
      - "5000:5000"

  supabase-meta:
    image: supabase/postgres-meta:v0.66.0
    restart: always
    depends_on:
      - supabase-db
    environment:
      - PG_META_PORT=8080
      - PG_META_DB_HOST=supabase-db
      - PG_META_DB_PORT=5432
      - PG_META_DB_NAME=${SUPABASE_DB:-supabase}
      - PG_META_DB_USER=${SUPABASE_DB_USER:-${POSTGRES_USER}}
      - PG_META_DB_PASSWORD=${SUPABASE_DB_PASSWORD:-${POSTGRES_PASSWORD}}
    networks:
      - n8n-network
    ports:
      - "8082:8080"

  supabase-studio:
    image: supabase/studio:20230327-c67d0ee
    restart: always
    depends_on:
      - supabase-db
      - supabase-auth
      - supabase-rest
      - supabase-storage
      - supabase-meta
    environment:
      - STUDIO_PG_META_URL=http://supabase-meta:8080
      - SUPABASE_URL=http://n8n-stack
      - SUPABASE_REST_URL=http://supabase-rest:3000
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU}
    networks:
      - n8n-network
    ports:
      - "3333:3000"
